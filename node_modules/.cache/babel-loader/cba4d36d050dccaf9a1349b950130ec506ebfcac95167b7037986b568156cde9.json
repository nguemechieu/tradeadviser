{"ast":null,"code":"import React,{StrictMode}from'react';import'./index.css';import App from'./App';import{AuthProvider}from'./context/AuthProvider';import{BrowserRouter,Routes,Route}from'react-router-dom';import{createRoot}from\"react-dom/client\";import{jsx as _jsx}from\"react/jsx-runtime\";createRoot(document.getElementById('root')).render(/*#__PURE__*/_jsx(StrictMode,{children:/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(AuthProvider,{children:/*#__PURE__*/_jsx(Routes,{children:/*#__PURE__*/_jsx(Route,{path:\"/*\",element:/*#__PURE__*/_jsx(App,{})})})})})}));","map":{"version":3,"names":["React","StrictMode","App","AuthProvider","BrowserRouter","Routes","Route","createRoot","jsx","_jsx","document","getElementById","render","children","path","element"],"sources":["C:/Users/nguem/IdeaProjects/tradeadviser/src/index.js"],"sourcesContent":["import React, {StrictMode} from 'react';\n\nimport './index.css';\nimport App from './App';\nimport { AuthProvider } from './context/AuthProvider';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport {createRoot} from \"react-dom/client\";\n\n    createRoot(\n        document.getElementById('root')\n    ).render(\n        <StrictMode>\n            <BrowserRouter>\n                <AuthProvider>\n                    <Routes>\n                        <Route path=\"/*\" element={<App/>}/>\n                    </Routes>\n                </AuthProvider>\n            </BrowserRouter>\n        </StrictMode>\n    );\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,UAAU,KAAO,OAAO,CAEvC,MAAO,aAAa,CACpB,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,OAASC,YAAY,KAAQ,wBAAwB,CACrD,OAASC,aAAa,CAAEC,MAAM,CAAEC,KAAK,KAAQ,kBAAkB,CAC/D,OAAQC,UAAU,KAAO,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAExCF,UAAU,CACNG,QAAQ,CAACC,cAAc,CAAC,MAAM,CAClC,CAAC,CAACC,MAAM,cACJH,IAAA,CAACR,UAAU,EAAAY,QAAA,cACPJ,IAAA,CAACL,aAAa,EAAAS,QAAA,cACVJ,IAAA,CAACN,YAAY,EAAAU,QAAA,cACTJ,IAAA,CAACJ,MAAM,EAAAQ,QAAA,cACHJ,IAAA,CAACH,KAAK,EAACQ,IAAI,CAAC,IAAI,CAACC,OAAO,cAAEN,IAAA,CAACP,GAAG,GAAC,CAAE,CAAC,CAAC,CAC/B,CAAC,CACC,CAAC,CACJ,CAAC,CACR,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}